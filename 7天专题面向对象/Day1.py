'''第一天'''
'''
1.说说对面向对象的理解
答：
    面向对象编程——Object Oriented Programming，简称OOP，
是一种程序设计思想。OOP把对象作为程序的基本单元，一个对象包含了数据和
操作数据的函数。
    面向对象是相当于面向过程而言的，面向过程语言是一种基于功能分析的，以算法
为中心的程序设计方法，而面向对象是一种基于结构分析的，以数据为中心的程序设计思想。
在面向对象语言中有一个很重要的东西，叫做类。
    在Python中，所有数据类型都可以视为对象，当然也可以自定义对象。自定义的对象数据
类型就是面向对象中的类（Class）的概念。
'''
'''
2.说一说你知道的面向对象的一些术语以及定义
答：
类(Class): 用来描述具有相同属性和方法的对象的集合。它定义了该集合中每个对象所共有的属性和方法。其中的对象被称作类的实例。
实例：也称对象。通过类定义的初始化方法，赋予具体的值，成为一个”有血有肉的实体”。
实例化：创建类的实例的过程或操作。
实例变量：定义在实例中的变量，只作用于当前实例。
类变量：类变量是所有实例公有的变量。类变量定义在类中，但在方法体之外。
数据成员：类变量、实例变量、方法、类方法、静态方法和属性等的统称。
方法：类中定义的函数。
静态方法：不需要实例化就可以由类执行的方法
类方法：类方法是将类本身作为对象进行操作的方法。
方法重写：如果从父类继承的方法不能满足子类的需求，可以对父类的方法进行改写，这个过程也称override。
封装：将内部实现包裹起来，对外透明，提供api接口进行调用的机制
继承：即一个派生类（derived class）继承父类（base class）的变量和方法。
多态：根据对象类型的不同以不同的方式进行处理。
'''
'''
3.说说面向对象的类和实例
答：
1.面向对象最重要的概念就是类（Class）和实例（Instance），类是抽象的模板，比如Student类，而实例是根据类创建出来的一个个具体的“对象”，每个对象都拥有相同的方法，但各自的数据可能不同。方法就是与实例绑定的函数，和普通函数不同，方法可以直接访问实例的数据；
2.class后面紧接着是类名，即Student，类名通常是大写开头的单词，紧接着是(object)，表示该类是从哪个类继承下来的，继承的概念我们后面再讲，通常，如果没有合适的继承类，就使用object类，这是所有类最终都会继承的类
3.通过定义一个特殊的__init__方法，该方法在类实例化时会自动调用。可以在创建实例的时候，把一些我们认为必须绑定的属性强制填写进去。__init__方法的第一个参数永远是self，注意__init__方法的第一个参数永远是self，表示创建的实例本身，因此，在__init__方法内部，就可以把各种属性绑定到self，因为self就指向创建的实例本身。
'''
class Student(object):
    def __init__(self, name, age):
        self.name = name
        self.age = age
    def print_name(self):
        print('name: %s' % (self.name))

'''课后习题'''

'''
1.一句话说出类和实例的区别是：类产生了实例，实例是以类为模板而实现的
2.实例变量和类变量的区别是：实例变量是具体的实例所拥有的变量，类变量是所有实例的公共变量
3.一句话说出什么是面向对象：面向对象是指将对象作为程序的基本元，对象包含数据和方法
'''